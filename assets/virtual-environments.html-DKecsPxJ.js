import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,o}from"./app-CpDgsZ6a.js";const i={};function r(l,e){return o(),n("div",null,e[0]||(e[0]=[a('<h2 id="python-virtual-environments" tabindex="-1"><a class="header-anchor" href="#python-virtual-environments"><span>Python virtual environments</span></a></h2><p>如果没有虚拟环境，两个版本的Djiango就会发生冲突（因为是在同一台Python肯定会冲突）就像一台电脑上只能安装一个版本的微信。</p><p>虚拟环境就像给每个项目提供一个小盒子，里面装着所有这个项目需要的东西，而且盒子之间是相互独立的。</p><h3 id="为什么需要虚拟环境" tabindex="-1"><a class="header-anchor" href="#为什么需要虚拟环境"><span>为什么需要虚拟环境?</span></a></h3><ul><li>依赖管理: 不同项目可能需要不同版本的库，虚拟环境可以避免版本冲突。</li><li>项目隔离: 保持全局环境的感觉整洁，每个项目都有自己的环境，不会互相影响。</li><li>易于复制: 如果你想在另一台机器或者环境中复制你的项目，虚拟环境可以让这一个过程变得简单，因为你可以很容易地重新创建一个一模一样的环境</li></ul><h3 id="常见的python虚拟环境" tabindex="-1"><a class="header-anchor" href="#常见的python虚拟环境"><span>常见的Python虚拟环境</span></a></h3><ul><li>venv: 自带的虚拟环境工具，从Python3.3开始内置</li><li>pipenv: <code>pip</code> 和<code>venv</code>的结合</li><li>conda: 开源包</li></ul><h3 id="创建虚拟环境venv" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境venv"><span>创建虚拟环境venv</span></a></h3><p>在指定文件夹下打开Terminal并且输入命令<code>python -m venv &lt;name&gt;</code></p><p>激活环境: <code>&lt;name&gt;\\Scripts\\activate</code></p><p>关闭环境: <code>deactivate</code></p><p>查看安装包: <code>pip list</code></p><h3 id="更改虚拟环境" tabindex="-1"><a class="header-anchor" href="#更改虚拟环境"><span>更改虚拟环境</span></a></h3><p>在pycharm里打开settings&gt;Project&gt;Python Interpreter&gt;Add Interpreter 然后选中虚拟环境</p>',14)]))}const s=t(i,[["render",r]]),h=JSON.parse(`{"path":"/python-notices/virtual-environments.html","title":"Pyhton virtual environments","lang":"en-US","frontmatter":{"title":"Pyhton virtual environments","icon":"blog","date":"2025-05-04T17:34:53.000Z","author":"qcoding","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"Python virtual environments 如果没有虚拟环境，两个版本的Djiango就会发生冲突（因为是在同一台Python肯定会冲突）就像一台电脑上只能安装一个版本的微信。 虚拟环境就像给每个项目提供一个小盒子，里面装着所有这个项目需要的东西，而且盒子之间是相互独立的。 为什么需要虚拟环境? 依赖管理: 不同项目可能需要不同版本的库，虚...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pyhton virtual environments\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-04T17:34:53.000Z\\",\\"dateModified\\":\\"2025-05-04T21:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"qcoding\\"}]}"],["meta",{"property":"og:url","content":"https://qcoding-lab.github.io/python-notices/virtual-environments.html"}],["meta",{"property":"og:site_name","content":"Qizhe's Blog"}],["meta",{"property":"og:title","content":"Pyhton virtual environments"}],["meta",{"property":"og:description","content":"Python virtual environments 如果没有虚拟环境，两个版本的Djiango就会发生冲突（因为是在同一台Python肯定会冲突）就像一台电脑上只能安装一个版本的微信。 虚拟环境就像给每个项目提供一个小盒子，里面装着所有这个项目需要的东西，而且盒子之间是相互独立的。 为什么需要虚拟环境? 依赖管理: 不同项目可能需要不同版本的库，虚..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-04T21:38:25.000Z"}],["meta",{"property":"article:author","content":"qcoding"}],["meta",{"property":"article:published_time","content":"2025-05-04T17:34:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-04T21:38:25.000Z"}]]},"git":{"createdTime":1746394705000,"updatedTime":1746394705000,"contributors":[{"name":"qcoding-lab","username":"qcoding-lab","email":"qqzhwang@gmail.com","commits":1,"url":"https://github.com/qcoding-lab"}],"changelog":[{"hash":"93deceb0270337e8d802e28f5e4fa6fdc574204d","time":1746394705000,"email":"qqzhwang@gmail.com","author":"qcoding-lab","message":"Add entry \\"Python virtual environment\\""}]},"readingTime":{"minutes":1.27,"words":380},"filePathRelative":"python-notices/virtual-environments.md","excerpt":"<h2>Python virtual environments</h2>\\n<p>如果没有虚拟环境，两个版本的Djiango就会发生冲突（因为是在同一台Python肯定会冲突）就像一台电脑上只能安装一个版本的微信。</p>\\n<p>虚拟环境就像给每个项目提供一个小盒子，里面装着所有这个项目需要的东西，而且盒子之间是相互独立的。</p>\\n<h3>为什么需要虚拟环境?</h3>\\n<ul>\\n<li>依赖管理: 不同项目可能需要不同版本的库，虚拟环境可以避免版本冲突。</li>\\n<li>项目隔离: 保持全局环境的感觉整洁，每个项目都有自己的环境，不会互相影响。</li>\\n<li>易于复制: 如果你想在另一台机器或者环境中复制你的项目，虚拟环境可以让这一个过程变得简单，因为你可以很容易地重新创建一个一模一样的环境</li>\\n</ul>","autoDesc":true}`);export{s as comp,h as data};
